name: Publish Modpack

on:
  create:
    tags:
      - '*'
    branches:
      - main
      - experimental

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Format repository name
        id: format_name
        run: |
          NAME="${{ github.event.repository.name }}"
          if [[ "${GITHUB_REF_NAME}" == "experimental" ]]; then # Add "_EXPERIMENTAL" to the modpack name if the package comes from the experimental branch
            NAME="${NAME}_EXPERIMENTAL"
          fi
          NAME="${NAME//-/_}" # Hyphens are replaced with underscores (placeholder for spaces in the Thunderstore)
          echo "result=$NAME" >> $GITHUB_OUTPUT
      - name: Set dev flag
        id: dev_flag
        run: | # Check if it is a release or experimental
          if [ "${GITHUB_REF_NAME}" = "experimental" ]; then
            echo "boolean=true" >> $GITHUB_OUTPUT # experimental branch
          else
            echo "boolean=false" >> $GITHUB_OUTPUT # main branch
          fi
      - name: Read categories
        id: categories
        run: | # The file "categories.txt" is read as a list
          CATEGORIES=$(cat categories.txt)
          echo "list<<EOF" >> $GITHUB_OUTPUT
          echo "$CATEGORIES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Read dependencies
        id: dependencies
        run: | # The file "dependencies.txt" is read as a list
          echo "list=$(tr '\n' ' ' < dependencies.txt)" >> $GITHUB_OUTPUT
      - name: Upload to Thunderstore
        uses: GreenTF/upload-thunderstore-package@v4.3
        with:
          categories: ${{ steps.categories.outputs.list }} # Obtained from "categories.txt"
          dev: ${{ steps.dev_flag.outputs.boolean }} # For the main branch, this is set to false, while for the experimental branch, it is set to true.
          namespace: ${{ vars.NAMESPACE }} # Obtained from repository variable
          community: ${{ vars.GAME_NAME }} # Obtained from repository variable
          description: ${{ github.event.repository.description }} # Obtained from the repository description
          deps: ${{ steps.dependencies.outputs.list }} # Optained from "dependencies.txt"
          name: ${{ steps.format_name.outputs.result }} # Derived from the repository name
          repo: ${{ vars.THUNDERSTORE_REPOSITORY }} # Obtained from repository variable
          token: ${{ secrets.THUNDERSTORE_TOKEN }} # Obtained from repository secret
          version: ${{ github.ref_name }} # Obtained from tag